{
  "name": "safe-number",
  "version": "1.0.0",
  "description": "The safeNumber package ensures safe conversion of any value to a valid, finite number in JavaScript. It handles diverse inputs like strings, objects, arrays, null, undefined, and Infinity, always returning a reliable number or 0 for invalid cases. Whether you're working in a browser or on Node.js, safeNumber guarantees safe integer calculations, avoiding crashes and errors caused by unpredictable input or extremely large numbers beyond JavaScript's safe integer limit (2^53). Perfect for robust input validation and maintaining stable numeric operations in your applications.",
  "main": "src/index.ts",
  "module": "src/index.ts",
  "files": [
    "src/index.ts",
    "README.md",
    "LICENSE"
  ],
  "scripts": {
    "test": "jest"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Sawannrl123/safe-number.git"
  },
  "keywords": [
    "JavaScript",
    "safe number",
    "number conversion",
    "input validation",
    "number handling",
    "finite numbers",
    "data validation",
    "NaN check",
    "safe integer",
    "type conversion",
    "node.js",
    "browser compatibility",
    "input sanitization",
    "number safety",
    "large number handling"
  ],
  "author": "Sawan Kumar Nirala",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Sawannrl123/safe-number/issues"
  },
  "homepage": "https://github.com/Sawannrl123/safe-number#readme",
  "devDependencies": {
    "@types/jest": "^29.5.13",
    "jest": "^29.7.0",
    "ts-jest": "^29.2.5",
    "typescript": "^5.6.2"
  }
}
